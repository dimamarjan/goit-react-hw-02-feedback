{"version":3,"sources":["components/Feedback/Feedback.style.jsx","components/Statistics/Statistics.style.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.style.jsx","components/Section/Section.jsx","components/Feedback/Feedback.jsx","App.js","reportWebVitals.js","index.js"],"names":["NoStatContent","styled","div","StatList","ul","StatListItem","li","Statistics","this","props","good","neutral","bad","total","positivePercentage","Component","ActionButton","button","FacebookOptions","Object","keys","options","map","stateItem","onClick","onLeaveFeedback","value","ContentSection","SectionTitle","p","Section","console","log","title","children","FeedbackForm","state","buttonHandler","event","setState","prevState","target","counter","values","item","parseInt","countTotalFeedback","countPositiveFeedbackPercentage","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAEaA,EAAgBC,IAAOC,IAAV,+CCAbC,EAAWF,IAAOG,GAAV,+EAMRC,EAAeJ,IAAOK,GAAV,kD,OCJZC,EAAb,4JAEI,WACI,OACI,eAACJ,EAAD,WACI,eAACE,EAAD,oBAAqBG,KAAKC,MAAMC,QAChC,eAACL,EAAD,uBAAwBG,KAAKC,MAAME,WACnC,eAACN,EAAD,mBAAoBG,KAAKC,MAAMG,OAC/B,eAACP,EAAD,qBAAsBG,KAAKC,MAAMI,SACjC,eAACR,EAAD,kCAAmCG,KAAKC,MAAMK,mBAA9C,cAThB,GAAgCC,aCFnBC,EAAef,IAAOgB,OAAV,2GCEZC,EAAb,4JAEI,WAAU,IAAD,OACL,OACI,mCACKC,OAAOC,KAAKZ,KAAKC,MAAMY,SAASC,KAAI,SAACC,GAAD,OACjC,cAACP,EAAD,CAA8BQ,QAAS,EAAKf,MAAMgB,gBAAiBC,MAAOH,EAA1E,SAAsFA,GAAnEA,YANvC,GAAqCR,aCFxBY,EAAiB1B,IAAOC,IAAV,gDAId0B,EAAe3B,IAAO4B,EAAV,8FCHZC,EAAb,4JACI,WAEI,OADAC,QAAQC,IAAIxB,KAAKC,OAEb,eAACkB,EAAD,WACI,cAACC,EAAD,UAAepB,KAAKC,MAAMwB,QACzBzB,KAAKC,MAAMyB,gBAN5B,GAA6BnB,aCIhBoB,EAAb,4MACIC,MAAQ,CACJ1B,KAAM,EACNC,QAAS,EACTC,IAAK,GAJb,EAQIyB,cAAgB,SAACC,GACb,EAAKC,UAAS,SAACC,GAAD,sBACTF,EAAMG,OAAOf,MAAQc,EAAUF,EAAMG,OAAOf,OAAQ,OAVjE,wDAcI,WACI,IAAIgB,EAAU,EAId,OAHAvB,OAAOwB,OAAOnC,KAAK4B,OAAOd,KAAI,SAACsB,GAAD,OAC1BF,GAAWE,KAERF,IAnBf,6CAuBI,WACI,IAAIA,EAAU,EAKd,OAJAvB,OAAOwB,OAAOnC,KAAK4B,OAAOd,KAAI,SAACsB,GAAD,OAC1BF,GAAWE,KAEOC,SAASrC,KAAK4B,MAAM1B,KAAOgC,EAAU,OA5BnE,oBAkCI,WACI,OACI,qCACI,cAAC,EAAD,CAAST,MAAO,wBAAhB,SACI,cAAC,EAAD,CACIZ,QAASb,KAAK4B,MACdX,gBAAiBjB,KAAK6B,kBAE9B,cAAC,EAAD,CAASJ,MAAO,aAAhB,SACmC,IAA9BzB,KAAKsC,qBACF,cAAC,EAAD,CACIpC,KAAMF,KAAK4B,MAAM1B,KACjBC,QAASH,KAAK4B,MAAMzB,QACpBC,IAAKJ,KAAK4B,MAAMxB,IAChBC,MAAOL,KAAKsC,qBACZhC,mBAAoBN,KAAKuC,oCAE3B,cAAC/C,EAAD,yCAnD1B,GAAkCe,aCInBiC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b1502252.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nexport const NoStatContent = styled.div`\nmargin-top: 20px;\n`;","import styled from \"@emotion/styled\";\n\nexport const StatList = styled.ul`\nlist-style: none;\npadding: 0;\nmargin-top: 20px;\n`;\n\nexport const StatListItem = styled.li`\nmargin-bottom: 10px;\n`;","import React, { Component } from 'react'\nimport {StatList, StatListItem} from './Statistics.style'\n\n\nexport class Statistics extends Component {\n\n    render() {\n        return (\n            <StatList>\n                <StatListItem>Good: {this.props.good}</StatListItem>\n                <StatListItem>Neutral: {this.props.neutral}</StatListItem>\n                <StatListItem>Bad: {this.props.bad}</StatListItem>\n                <StatListItem>Total: {this.props.total}</StatListItem>\n                <StatListItem>Positive feedbacks: {this.props.positivePercentage}%</StatListItem>\n            </StatList>\n        )\n    };\n}\n\n\n\n","import styled from \"@emotion/styled\";\n\nexport const ActionButton = styled.button`\ntext-transform: capitalize;\n\n:not(:last-child){\n    margin-right: 15px;\n}\n`;","import React, { Component } from 'react';\nimport { ActionButton } from './FeedbackOptions.styled';\n\n\nexport class FacebookOptions extends Component {\n\n    render() {\n        return (\n            <>\n                {Object.keys(this.props.options).map((stateItem) => (\n                    <ActionButton key={stateItem} onClick={this.props.onLeaveFeedback} value={stateItem}>{stateItem}</ActionButton>\n                ))}\n            </>\n        )\n    };\n}\n","import styled from \"@emotion/styled\";\n\nexport const ContentSection = styled.div`\nmargin-left: 20px;\n`;\n\nexport const SectionTitle = styled.p`\ntext-transform: capitalize;\nfont-weight: 600;\nfont-size: 26px;\n`;\n","import React, { Component } from 'react'\nimport { ContentSection, SectionTitle } from './Section.style'\n\nexport class Section extends Component {\n    render() {\n        console.log(this.props)\n        return (\n            <ContentSection>\n                <SectionTitle>{this.props.title}</SectionTitle>\n                {this.props.children}\n            </ContentSection>\n        )\n    }\n}\n","import { Component } from \"react\";\nimport { NoStatContent } from \"./Feedback.style\";\nimport { Statistics } from \"components/Statistics/Statistics\"\nimport { FacebookOptions } from \"components/FeedbackOptions/FeedbackOptions\"\nimport { Section } from \"components/Section/Section\";\n\n\nexport class FeedbackForm extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    };\n\n\n    buttonHandler = (event) => {\n        this.setState((prevState) => ({\n            [event.target.value]: prevState[event.target.value] +1}))\n    };\n\n\n    countTotalFeedback() {\n        let counter = 0;\n        Object.values(this.state).map((item) => (\n            counter += item\n        ));\n        return counter;\n    }\n\n\n    countPositiveFeedbackPercentage() {\n        let counter = 0;\n        Object.values(this.state).map((item) => (\n            counter += item\n        ));\n        const resultPercent = parseInt(this.state.good / counter * 100);\n        return resultPercent;\n    }\n    \n    \n\n    render() {\n        return (\n            <>\n                <Section title={'Please leave feedback'}>\n                    <FacebookOptions\n                        options={this.state}\n                        onLeaveFeedback={this.buttonHandler} />\n                </Section>\n                <Section title={'Statistics'}>\n                    {this.countTotalFeedback() !== 0 ? \n                        <Statistics\n                            good={this.state.good}\n                            neutral={this.state.neutral}\n                            bad={this.state.bad}\n                            total={this.countTotalFeedback()}\n                            positivePercentage={this.countPositiveFeedbackPercentage()}>\n                        </Statistics>\n                        : <NoStatContent>No feedback given</NoStatContent>\n                    }\n                </Section>\n            </>\n        )\n    };\n}","import \"./App.css\";\nimport { FeedbackForm } from \"./components/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FeedbackForm></FeedbackForm>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}